name: Deploy to NAS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup WireGuard
        run: |
          sudo apt-get update
          sudo apt-get install -y wireguard
          echo "${{ secrets.WIREGUARD_CONFIG }}" > wg0.conf
          sudo wg-quick up ./wg0.conf

      - name: Copy files to NAS via SSH
        uses: appleboy/scp-action@v1 
        with:
          host: ${{ secrets.NAS_HOST }}
          port: ${{ secrets.NAS_PORT }}
          username: ${{ secrets.NAS_USERNAME }}
          key: ${{ secrets.NAS_SSH_KEY }}
          source: "app/**,components/**,data/**,lib/**,public/**,types/**,Dockerfile,docker-compose.yml,.dockerignore,next.config.ts,package.json,package-lock.json,tsconfig.json,postcss.config.mjs,eslint.config.mjs"
          target: "/home/rgeral/docker/cv-app"

      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.NAS_HOST }}
          port: ${{ secrets.NAS_PORT }}
          username: ${{ secrets.NAS_USERNAME }}
          key: ${{ secrets.NAS_SSH_KEY }}
          command_timeout: 30m
          script: |
            cd /home/rgeral/docker/cv-app
            docker-compose down --remove-orphans || true
            nohup docker-compose build --no-cache > /tmp/cv-build.log 2>&1 &
            BUILD_PID=$!
            echo "Build started with PID $BUILD_PID"
            
            # Attendre que le build se termine
            while kill -0 $BUILD_PID 2>/dev/null; do
              echo "Build in progress..."
              sleep 10
            done
            
            echo "Build completed, starting containers..."
            docker-compose up -d --remove-orphans
            echo "Deployment completed successfully!" 
